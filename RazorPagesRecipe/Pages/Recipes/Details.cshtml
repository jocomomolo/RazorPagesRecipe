@page
@model RazorPagesRecipe.Pages.Recipes.DetailsModel

@{
    ViewData["Title"] = "Details";
}

    <h2>@Html.DisplayFor(model => model.Recipe.Title)</h2>
    <hr />
    <dl class="row">
        <dt class="col-md-1">
            Category
        </dt>
        <dd class="col-md-2">
            @Html.DisplayFor(model => model.Recipe.Category.Name)
        </dd>
        <dt class="col-md-1">
            @Html.DisplayNameFor(model => model.Recipe.Portions)
        </dt>
        <dd class="col-md-2">
            @Html.DisplayFor(model => model.Recipe.Portions)
        </dd>
        <dt class="col-md-2">
            @Html.DisplayNameFor(model => model.Recipe.PreparationTime)
        </dt>
        <dd class="col-md-1">
            @Html.DisplayFor(model => model.Recipe.PreparationTime)
        </dd>
        <dt class="col-md-2">
            @Html.DisplayNameFor(model => model.Recipe.CookingTime)
        </dt>
        <dd class="col-md-1">
            @Html.DisplayFor(model => model.Recipe.CookingTime)
        </dd>
    </dl>
    <div class="row">
        <div class="col-xs-12">
            <table class="table">
                <thead>
                    <tr>
                        <th>
                            Utensils
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Recipe.RecipeUtensils)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.Utensil.Name)
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <div class="col-xs-12">
            <table class="table">
                <thead>
                    <tr>
                        <th>
                            Ingredients
                        </th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>
                            <pre>@Html.Raw(Model.Recipe.Ingredients.Replace(Environment.NewLine, "<br/>"))</pre>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>

    </div>
    <div class="col-xs-6">
        <table class="table">
            <thead>
                <tr>
                    <th>
                        Description
                    </th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>
                        <pre>@Html.Raw(Model.Recipe.Description.Replace(Environment.NewLine, "<br/>"))</pre>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
        <hr />
        <dl class="row">
            <dt class="col-md-1">
                @Html.DisplayNameFor(model => model.Recipe.Vegetarian)
            </dt>
            <dd class="col-md-1">
                <td>
                    @(Model.Recipe.Vegetarian ? "Yes" : "No")
                </td>
            </dd>
            <dt class="col-md-1">
                @Html.DisplayNameFor(model => model.Recipe.Freezable)
            </dt>
            <dd class="col-md-1">
                <td>
                    @(Model.Recipe.Freezable ? "Yes" : "No")
                </td>
            </dd>
            <dt class="col-md-2">
                @Html.DisplayNameFor(model => model.Recipe.Source)
            </dt>
            <dd class="col-md-6">
                <a href=@Html.DisplayFor(model => model.Recipe.Source)>@Html.DisplayFor(model => model.Recipe.Source)</a>
            <dt class="col-md-2">
                Owner
            </dt>
            <dd class="col-md-2">
                @Html.DisplayFor(model => model.Recipe.Owner.Name)
            </dd>
        </dl>
        <div>
            <a asp-page="./Edit" asp-route-id="@Model.Recipe.RecipeID">Edit</a> |
            <a asp-page="./Index">Back to List</a>
        </div>


